#pragma checksum "C:\Users\habee\source\repos\AtoVen_MVC_UI\AtoVen_MVC_UI\Views\User\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7e90703e72ad28d41d81b49bd6f55b79b269e72e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Edit), @"mvc.1.0.view", @"/Views/User/Edit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\habee\source\repos\AtoVen_MVC_UI\AtoVen_MVC_UI\Views\_ViewImports.cshtml"
using AtoVen_MVC_UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\habee\source\repos\AtoVen_MVC_UI\AtoVen_MVC_UI\Views\_ViewImports.cshtml"
using AtoVen_MVC_UI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7e90703e72ad28d41d81b49bd6f55b79b269e72e", @"/Views/User/Edit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"626a901b78c9ba6ddfd16d789cbc1ba6b4a4e185", @"/Views/_ViewImports.cshtml")]
    public class Views_User_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\habee\source\repos\AtoVen_MVC_UI\AtoVen_MVC_UI\Views\User\Edit.cshtml"
  
    ViewBag.Title = "User Edit";
    Layout = "_AdminLayout";


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n<!--begin::Layout-->\r\n<div class=\"flex-lg-row-fluid ms-lg-7 ms-xl-10\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e90703e72ad28d41d81b49bd6f55b79b269e72e5467", async() => {
                WriteLiteral(@"
        <!--begin::Content-->
        <div class=""flex-lg-row-fluid mb-10 mb-lg-0 me-lg-7 me-xl-10"">

            <!-- Company Information Start -->
            <!--begin::Card-->
            <div class=""card"" style=""width: 100% !important;"">
                <!--begin::Card body-->
                <div class=""card-body p-6"">
                    <div class=""mb-0"">
                        <!--begin::Row-->
                        <div class=""row gx-10 mb-5"">
                            <!--begin::Col-->
                            <div class=""col-lg-12"">
                                <label class=""form-label fs-6 fw-bolder text-black mb-3"">Edit User</label>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""fv-row mb-5"">
                                    <input name=""UserId"" type=""hidden"" id=""UserId""");
                BeginWriteAttribute("value", " value=\"", 1095, "\"", 1118, 1);
#nullable restore
#line 29 "C:\Users\habee\source\repos\AtoVen_MVC_UI\AtoVen_MVC_UI\Views\User\Edit.cshtml"
WriteAttributeValue("", 1103, ViewBag.userId, 1103, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" />
                                    <label for=""UserName"" class=""required form-label"">User Name</label>
                                    <input required name=""UserName"" type=""Email"" class=""form-control border"" placeholder=""example@gmail.com"" id=""UserName"" autocomplete=""off"" />
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""fv-row mb-5"">
                                    <label for=""Password"" class=""required form-label"">Password</label>
                                    <input required name=""Password"" type=""Password"" class=""form-control border"" placeholder=""Password"" id=""Password"" autocomplete=""off"" />
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""fv-row mb-5"">
                                    <label for=""Email"" class=""required form-label"">Ema");
                WriteLiteral(@"il</label>
                                    <input required name=""Email"" type=""text"" class=""form-control border"" placeholder=""example@gmail.com"" id=""Email"" autocomplete=""off"" />
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""fv-row mb-5"">
                                    <label for=""ApproverLevel"" class=""required form-label"">Approver Level</label>
                                    <select class=""form-control border"" name=""ApproverLevel"" id=""ApproverLevel"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e90703e72ad28d41d81b49bd6f55b79b269e72e8808", async() => {
                    WriteLiteral("--select--");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e90703e72ad28d41d81b49bd6f55b79b269e72e10398", async() => {
                    WriteLiteral("0");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e90703e72ad28d41d81b49bd6f55b79b269e72e11657", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e90703e72ad28d41d81b49bd6f55b79b269e72e12916", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""fv-row mb-5"">
                                    <label for=""Role"" class=""required form-label"">Role</label>
                                    <select class=""form-control border"" name=""Role"" id=""Role"">
                                    </select>
                                </div>
                            </div>

                        </div>
                        <div class=""row gx-10 mb-5"">
                            <div class=""col-lg-12"">
                                <button type=""button"" class=""btn btn-sm btn-primary"" id=""update"">Update</button>
                                <a href=""/User"" class=""btn btn-sm btn-default"">Back</a>
                            </div>
                        </div>
                    </div>
                </div>
         ");
                WriteLiteral("       <!--end::Card body-->\r\n            </div>\r\n            <!--end::Card-->\r\n\r\n\r\n        </div>\r\n        <!--end::Content-->\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <!--end::Form-->
    <!--begin::Sidebar-->
    <!--end::Sidebar-->
</div>
<!--end::Layout-->
<!--end::Root-->
<!--begin::Scrolltop-->
<div id=""kt_scrolltop"" class=""scrolltop"" data-kt-scrolltop=""true"">
    <!--begin::Svg Icon | path: icons/duotune/arrows/arr066.svg-->
    <span class=""svg-icon"">
        <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
            <rect opacity=""0.5"" x=""13"" y=""6"" width=""13"" height=""2"" rx=""1"" transform=""rotate(90 13 6)"" fill=""black"" />
            <path d=""M12.5657 8.56569L16.75 12.75C17.1642 13.1642 17.8358 13.1642 18.25 12.75C18.6642 12.3358 18.6642 11.6642 18.25 11.25L12.7071 5.70711C12.3166 5.31658 11.6834 5.31658 11.2929 5.70711L5.75 11.25C5.33579 11.6642 5.33579 12.3358 5.75 12.75C6.16421 13.1642 6.83579 13.1642 7.25 12.75L11.4343 8.56569C11.7467 8.25327 12.2533 8.25327 12.5657 8.56569Z"" fill=""black"" />
        </svg>
    </span>
    <!--end::Svg Icon-->
</div>
<!--end::Scrolltop-->
<!--end::Main-->

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
     
    <script>
        $(function () {
            var ddlRole = $(""#Role"");
            ddlRole.empty().append('<option selected=""selected"" value=""0"" disabled = ""disabled"">Loading.....</option>');
            $.ajax({
                type: ""POST"",
                async: true,
                url: ""/User/getUserRole"",
                data: '{}',
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {
                    console.log(response)
                    ddlRole.empty().append('<option selected=""selected"" value="""">--select--</option>');
                    $.each(response, function (i) {
                        ddlRole.append($('<option>',
                            {
                                value: response[i].id,
                                text: response[i].name
                            },
                            '</option>'));
                    });

           ");
                WriteLiteral(@"         GetDetails();
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });

        function GetDetails() {
            $.ajax({
                type: ""POST"",
                async: true,
                url: ""/User/Get"",
                data: { Id: $(""#UserId"").val() },
                dataType: ""json"",
                error: function () {
                    alert(""An error occoured!"");
                },
                success: function (d) {

                    console.log(d);

                    $(""#UserName"").val(d.user.userName);
                    $(""#Email"").val(d.user.email);
                    $('#ApproverLevel').val(d.user.approverLevel).trigger('change');
                    $('#Role').val(d.roleids[0]).trigger('change');;

                }");
                WriteLiteral(@"
            });
        }

        document.addEventListener('DOMContentLoaded', function (e) {
            const CreateButton = document.getElementById('update');
            const frmForm = document.getElementById('frm');
            const fv = FormValidation.formValidation(frmForm, {
                fields: {
                    'UserName': {
                        validators: {
                            notEmpty: {
                                message: 'User Name is required'
                            },
                            emailAddress: {
                                message: 'The value is not a valid email address'
                            }
                        }
                    },
                    'Password': {
                        validators: {
                            notEmpty: {
                                message: 'Password is required'
                            }
                        }
                    },
                ");
                WriteLiteral(@"    'Email': {
                        validators: {
                            notEmpty: {
                                message: 'Email is required'
                            },
                            emailAddress: {
                                message: 'The value is not a valid email address'
                            }
                        }
                    },
                    'ApproverLevel': {
                        validators: {
                            notEmpty: {
                                message: 'Approver Level is required'
                            }
                        }
                    },
                    'Role': {
                        validators: {
                            notEmpty: {
                                message: 'Role is required'
                            }
                        }
                    },
                },
                plugins: {
                    trigger: new FormValidation.p");
                WriteLiteral(@"lugins.Trigger(),
                    bootstrap: new FormValidation.plugins.Bootstrap5({
                        rowSelector: '.fv-row',
                        eleInvalidClass: '',
                        eleValidClass: ''
                    })
                },

            }).on('core.form.validating', function () {
                CreateButton.innerHTML = 'Validating ...';

            });

            CreateButton.addEventListener('click', function () {
                fv.validate().then(function (status) {
                    CreateButton.innerHTML = status === 'Valid' ? 'Form is validated. Submitting ...' : 'Please enter the correct values';
                    if (status === 'Valid') {
                        var UserObj = {};
                        UserObj.Id = $(""#UserId"").val();
                        UserObj.UserName = $('#UserName').val();
                        UserObj.Email = $('#Email').val();
                        UserObj.Password = $('#Password').val();
         ");
                WriteLiteral(@"               UserObj.ApproverLevel = $('#ApproverLevel').val();
                        UserObj.Role = $('#Role').val();
                        var postData = {
                            userdtls: UserObj
                        }
                        $.ajax({
                            type: ""POST"",
                            async: true,
                            url: ""/User/Update"",
                            data: postData,

                            error: function () {
                                alert(""An error occoured!"");
                            },
                            success: function (d) {
                                console.log(d);
                                CreateButton.innerHTML = ""Create""
                                Swal.fire({
                                    text: ""User is updated successfully!"",
                                    icon: ""success"",
                                    buttonsStyling: false,
                   ");
                WriteLiteral(@"                 confirmButtonText: ""Ok, got it!"",
                                    customClass: {
                                        confirmButton: ""btn btn-primary""
                                    }
                                });
                            }
                        });
                    }
                });
            });
        });


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
